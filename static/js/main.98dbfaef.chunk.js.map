{"version":3,"sources":["Assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","Grid","Section","title","children","Loader","role","aria-label","Text","span","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","console","log","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","fisrt_air_date","TVContainer","List","ul","StyledHeader","header","Item","li","current","StyledLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","a","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","first_air_date","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98dbfaef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child){\r\n        margin-bottom: 50px;\r\n    }\r\n`;\r\n\r\nconst Title = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 125px);\r\n    grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n    <Container>\r\n        <Title>{ title }</Title>\r\n        <Grid>{ children }</Grid>\r\n    </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n}\r\n\r\nexport default Section;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 28px;\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst Loader = () => (\r\n    <Container>\r\n        <span role=\"img\" aria-label=\"Loading\">\r\n            ⏰\r\n        </span>\r\n    </Container>\r\n);\r\n\r\n\r\nexport default Loader;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n    <Container>\r\n        <Text color={color}>\r\n            { text }\r\n        </Text>\r\n    </Container>\r\n)\r\n\r\nMessage.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n    <Link to={isMovie? `/movie/${id}` : `/show/${id}`}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image bgUrl={ imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../Assets/noPosterSmall.png\") } />\r\n                <Rating>\r\n                    <span role=\"img\" aria-label=\"rating\">⭐</span>\r\n                    {\" \"}\r\n                    { rating }/10\r\n                </Rating>\r\n            </ImageContainer>\r\n            <Title>\r\n                { title.length > 18 ? `${title.substring(0, 15)}...` : title }\r\n            </Title>\r\n            <Year>{ year }</Year>\r\n        </Container>\r\n    </Link>\r\n)\r\n\r\nPoster.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    imageUrl: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({\r\n    nowPlaying, popular, upcoming, loading, error\r\n}) => loading ? <Loader /> : (\r\n    <Container>\r\n        <Helmet>\r\n            <title>Movies | Nomflix</title>\r\n        </Helmet>\r\n\r\n        { loading ? (\r\n            <Loader />\r\n        ) : (\r\n            <Container>\r\n                <Helmet>\r\n                    <title>Movies | Nomflix</title>\r\n                </Helmet>\r\n                {/* '<Section></Section>' is not a condition but a component, so it will always be true */}\r\n                { nowPlaying && nowPlaying.length > 0 && (\r\n                    // children is the elements that are inside the tags in JSX\r\n                    <Section title=\"Now Playing\">\r\n                        { nowPlaying.map(movie => \r\n                            <Poster \r\n                                key={ movie.id }\r\n                                id={ movie.id }\r\n                                imageUrl={ movie.poster_path }\r\n                                title={ movie.original_title }\r\n                                rating={ movie.vote_average }\r\n                                year={ movie.release_date && movie.release_date.substring(0, 4) }\r\n                                isMovie={ true }\r\n                            />\r\n                        ) }\r\n                    </Section>\r\n                ) }\r\n                { upcoming && upcoming.length > 0 && (\r\n                    <Section title=\"Upcoming Movies\">\r\n                        { upcoming.map(movie => \r\n                            <Poster \r\n                                key={ movie.id }\r\n                                id={ movie.id }\r\n                                imageUrl={ movie.poster_path }\r\n                                title={ movie.original_title }\r\n                                rating={ movie.vote_average }\r\n                                year={ movie.release_date && movie.release_date.substring(0, 4) }\r\n                                isMovie={ true }\r\n                            />\r\n                        ) }\r\n                    </Section>\r\n                ) }\r\n                { popular && popular.length > 0 && (\r\n                    <Section title=\"Popular Movies\">\r\n                        { popular.map(movie => \r\n                            <Poster \r\n                                key={ movie.id }\r\n                                id={ movie.id }\r\n                                imageUrl={ movie.poster_path }\r\n                                title={ movie.original_title }\r\n                                rating={ movie.vote_average }\r\n                                year={ movie.release_date && movie.release_date.substring(0, 4) }\r\n                                isMovie={ true }\r\n                            />\r\n                        ) }\r\n                    </Section>\r\n                ) }\r\n                { error && <Message color=\"#e74c3c\" text={ error }></Message> }\r\n\r\n            </Container>\r\n        )\r\n    }\r\n\r\n        \r\n    </Container>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcomfing: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"b9600dd8d39faad66727a67d2b72a447\",\r\n    language: \"en-US\"\r\n  }\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: id =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: id =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};","import HomeContainer from './HomeContainer';\r\n\r\nexport default HomeContainer;","// \"Container - Presenter Pattern\"\r\n// Container has data and state, container gets api, container does all the logic\r\n// Presenter is just a functional components that just shows data\r\n\r\nimport React from 'react';\r\nimport HomePresenter from './HomePresenter';\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n          const {\r\n            data: { results: nowPlaying }\r\n          } = await moviesApi.nowPlaying();\r\n          console.log(nowPlaying)\r\n          const {\r\n            data: { results: upcoming }\r\n          } = await moviesApi.upcoming();\r\n          console.log(upcoming)\r\n          const {\r\n            data: { results: popular }\r\n          } = await moviesApi.popular();\r\n          console.log(popular)\r\n          \r\n          this.setState({\r\n            nowPlaying,\r\n            upcoming,\r\n            popular\r\n          });\r\n          \r\n        } catch {\r\n          this.setState({\r\n            error: \"Can't find Movie information.\"\r\n          });\r\n        } finally {\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        }\r\n      }\r\n    \r\n    render() {\r\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n        return (\r\n            <HomePresenter \r\n                nowPlaying={nowPlaying}\r\n                upcoming={upcoming}\r\n                popular={popular}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding: 0px 0px;\r\n`;\r\n\r\nconst TVPresenter = ({\r\n    topRated, popular, airingToday, loading, error\r\n}) => (\r\n    <>\r\n        <Helmet><title>TV Shows | Nomflix</title></Helmet>\r\n        { loading ? <Loader /> : (\r\n            <Container>\r\n                { topRated && topRated.length > 0 && (\r\n                    <Section title=\"Top Rated Shows\">\r\n                        { topRated.map(show =>\r\n                            <Poster \r\n                                key={ show.id }\r\n                                id={ show.id }\r\n                                imageUrl={ show.poster_path }\r\n                                title={ show.original_name }\r\n                                rating={ show.vote_average }\r\n                                year={ show.fisrt_air_date && show.fisrt_air_date.substring(0, 4) }\r\n                            />    \r\n                        ) }\r\n                    </Section>\r\n                ) }\r\n                { popular && popular.length > 0 && (\r\n                    <Section title=\"Popular Shows\">\r\n                        { popular.map(show =>\r\n                            <Poster \r\n                                key={ show.id }\r\n                                id={ show.id }\r\n                                imageUrl={ show.poster_path }\r\n                                title={ show.original_name }\r\n                                rating={ show.vote_average }\r\n                                year={ show.fisrt_air_date && show.fisrt_air_date.substring(0, 4) }\r\n                            />    \r\n                        ) }\r\n                    </Section>\r\n                ) }\r\n                { airingToday && airingToday.length > 0 && (\r\n                    <Section title=\"Airing Today\">\r\n                        { airingToday.map(show =>\r\n                            <Poster \r\n                                key={ show.id }\r\n                                id={ show.id }\r\n                                imageUrl={ show.poster_path }\r\n                                title={ show.original_name }\r\n                                rating={ show.vote_average }\r\n                                year={ show.fisrt_air_date && show.fisrt_air_date.substring(0, 4) }\r\n                            />\r\n                        ) }\r\n                    </Section>\r\n                ) }\r\n                { error && <Message color=\"#e74c3c\" text={ error }></Message> }\r\n            </Container>\r\n            )\r\n        }\r\n    </>\r\n)\r\n\r\nTVPresenter.propTypes = {\r\n    topRated: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    airingToday: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","import React from 'react';\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from 'api';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        topRated: null,\r\n        popular: null,\r\n        airingToday: null,\r\n        loading: true,\r\n        error: null\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const {\r\n                data: { results: topRated }\r\n            } = await tvApi.topRated();\r\n            const {\r\n                data: { results: popular }\r\n            } = await tvApi.popular();\r\n            const {\r\n                data:  {results: airingToday }\r\n            } = await tvApi.airingToday();\r\n\r\n            this.setState({\r\n                topRated,\r\n                popular,\r\n                airingToday\r\n              });\r\n\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find TV information.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { topRated, popular, airingToday, loading, error } = this.state;\r\n        return (\r\n            <TVPresenter \r\n                topRated={topRated}\r\n                popular={popular}\r\n                airingToday={airingToday}\r\n                loading={loading}\r\n                error={error}\r\n            />\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\n// using 'style-components' you can isolate css to the component and also manage them in the same file\r\nconst List = styled.ul`\r\n    display: flex;\r\n`;\r\n\r\nconst StyledHeader = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid ${\r\n      props => (props.current ? \"#3498db\" : \"transparent\") \r\n    };\r\n    transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Header = ({location : { pathname }}) => (\r\n    <StyledHeader>\r\n        <List>\r\n            <Item current={pathname === \"/\"}>\r\n                <StyledLink to=\"/\">Movies</StyledLink>\r\n            </Item>\r\n            <Item current={pathname === \"/tv\"}>\r\n                <StyledLink to=\"/tv\">TV</StyledLink>\r\n            </Item>\r\n            <Item current={pathname === \"/search\"}>\r\n                <StyledLink to=\"/search\">Search</StyledLink>\r\n            </Item>\r\n        </List>\r\n    </StyledHeader>\r\n)\r\n\r\n// 'withRouter' is a component that wraps other component and provides the information about the router to it\r\nexport default withRouter(Header);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n    movieResults, tvResults, loading, searchTerm, handleSubmit, error, updateTerm\r\n}) => (\r\n    <Container>\r\n      <Helmet><title>Search | Nomflix</title></Helmet>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          placeholder=\"Search Movies or TV Shows...\"\r\n          value={searchTerm}\r\n          onChange={updateTerm}\r\n        />\r\n      </Form>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {movieResults && movieResults.length > 0 && (\r\n            <Section title=\"Movie Results\">\r\n              {movieResults.map(movie => (\r\n                <Poster \r\n                  key={ movie.id }\r\n                  id={ movie.id }\r\n                  imageUrl={ movie.poster_path }\r\n                  title={ movie.original_title }\r\n                  rating={ movie.vote_average }\r\n                  year={ movie.release_date && movie.release_date.substring(0, 4) }\r\n                  isMovie={ true }\r\n              />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {tvResults && tvResults.length > 0 && (\r\n            <Section title=\"TV Show Results\">\r\n              {tvResults.map(show => (\r\n                <Poster \r\n                  key={ show.id }\r\n                  id={ show.id }\r\n                  imageUrl={ show.poster_path }\r\n                  title={ show.original_name }\r\n                  rating={ show.vote_average }\r\n                  year={ show.fisrt_air_date && show.fisrt_air_date.substring(0, 4) }\r\n              />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          { error && <Message color=\"#e74c3c\" text={ error }></Message> }\r\n          { tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 &&\r\n            <Message color=\"#95a5a6\" text=\"Nothing Found\"></Message>\r\n          }\r\n        </>\r\n      )}\r\n      \r\n    </Container>\r\n  );\r\n\r\n\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults: PropTypes.array,\r\n    tvResults: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string,\r\n    searchTerm: PropTypes.string,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    updateTerm: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import React from 'react';\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi } from \"api\";\r\nimport { tvApi } from 'api';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        loading: false,\r\n        error: null\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        // In React, by default, pressing enter key is submit. We need to intercept that event. \r\n        event.preventDefault();\r\n        \r\n        const { searchTerm } = this.state;\r\n        if (searchTerm !== \"\") {\r\n            this.searchByTerm();\r\n        }\r\n    }\r\n\r\n    searchByTerm = async () => {\r\n        const { searchTerm } = this.state;\r\n        this.setState({\r\n                loading: true\r\n            })\r\n        try {\r\n            const {\r\n                data: { results: movieResults }\r\n            } = await moviesApi.search(searchTerm);\r\n            const {\r\n                data: { results: tvResults }\r\n            } = await tvApi.search(searchTerm);\r\n            this.setState({\r\n                movieResults,\r\n                tvResults\r\n            })\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find results.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    updateTerm = (event) => {\r\n        const { target: { value }} = event;\r\n        this.setState({\r\n            searchTerm: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n        return (\r\n            <SearchPresenter \r\n                movieResults={movieResults}\r\n                tvResults={tvResults}\r\n                searchTerm={searchTerm}\r\n                loading={loading}\r\n                error={error}\r\n                handleSubmit={this.handleSubmit}\r\n                updateTerm={this.updateTerm}\r\n            />\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    error ? <Message color=\"#e74c3c\" text={ error }></Message> : (\r\n      <Container>\r\n        <Helmet><title>{ result.original_title ? result.original_title : result.original_name } | Nomflix</title></Helmet>\r\n        <Backdrop\r\n          bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n        />\r\n        <Content>\r\n          <Cover\r\n            bgImage={\r\n              result.poster_path\r\n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                : require(\"../../Assets/noPosterSmall.png\")\r\n            }\r\n          />\r\n          <Data>\r\n            <Title>{ result.original_title ? result.original_title : result.original_name }</Title>\r\n            <ItemContainer>\r\n              <Item>\r\n                { result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4) }\r\n              </Item>\r\n              <Divider>•</Divider>\r\n              <Item>\r\n                { result.runtime ? result.runtime : result.episode_run_time[0] } min\r\n              </Item>\r\n              <Divider>•</Divider>\r\n              <Item>\r\n                { result.genres && result.genres.map((genre, index) => \r\n                  index === result.genres.length - 1 ? \r\n                  genre.name : `${genre.name} / `)\r\n                }\r\n              </Item>\r\n            </ItemContainer>\r\n              <Overview>{ result.overview }</Overview>\r\n          </Data>\r\n        </Content>\r\n      </Container>\r\n    )\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import React from 'react';\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const {location: { pathname }} = props;\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie: pathname.includes(\"/movie/\")\r\n        }\r\n    }\r\n    \r\n\r\n    async componentDidMount() {\r\n        // receives props from 'Router'\r\n        const {\r\n            match: {\r\n                params: { id }\r\n            },\r\n            history: { push },\r\n            location: { pathname }\r\n        } = this.props;\r\n\r\n        const { isMovie } = this.state;\r\n\r\n        const parsedId = parseInt(id);\r\n        if (isNaN(parsedId)) {\r\n            return push(\"/\");\r\n        }\r\n\r\n        let result = null;\r\n        try {\r\n            if (isMovie) {\r\n                ({data: result } = await moviesApi.movieDetail(parsedId));\r\n            } else {\r\n                ({data: result } = await tvApi.showDetail(parsedId));\r\n            }\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find anything.\"\r\n            })\r\n        } finally {\r\n            this.setState({\r\n                loading: false,\r\n                result\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { result, error, loading } = this.state;\r\n        return (\r\n            <DetailPresenter \r\n                result={result}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Header from \"Components/Header\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => {\r\n    return (\r\n        <Router>\r\n            <>\r\n                <Header />\r\n                {/* 'Switch' only allow to render one at a time */}\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Home} />\r\n                    <Route path=\"/tv\" exact component={TV} />\r\n                    {/* <Route path=\"/tv/popular\" render={() => <h1>Popular</h1>} /> */}\r\n                    <Route path=\"/search\" exact component={Search} />\r\n                    \r\n                    {/* 'Router' by default gives information of the props to the 'Route' */}\r\n                    <Route path=\"/movie/:id\" component={Detail}/>\r\n                    <Route path=\"/show/:id\" component={Detail}/>\r\n\r\n                    {/* if none of the above url matches correctly, redirect back to home */}\r\n                    <Redirect from=\"*\" to=\"/\" />\r\n                </Switch>\r\n            </>\r\n        </Router>\r\n    )\r\n}        \r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\n// createGlobalStyle helps you to apply css in global range\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:80px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;","import React from 'react';\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n// code below will search index.js file inside of 'Header' folder\n// import Header from \"Components/Header\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Router />\n        <GlobalStyles />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// path below works because we setted NODE_PATH to 'src' in .env\nimport App from 'Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}